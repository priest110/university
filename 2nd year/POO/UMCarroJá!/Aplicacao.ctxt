#BlueJ class context
comment0.target=Aplicacao
comment1.params=
comment1.target=Aplicacao()
comment1.text=\n\ Construtor.\n\ \n\ Cria\ os\ menus\ e\ a\ camada\ de\ neg\u00F3cio.\n
comment10.params=p\ c
comment10.target=void\ menu_Carro(Proprietario,\ Cliente)
comment10.text=\n\ Metodo\ que\ disponibiliza\ o\ menu\ dos\ tipos\ de\ carros,\ de\ forma\ a\ escolher\ um,\ para\ iniciar\ a\ inser\u00E7ao\ de\ um\ novo\ veiculo\n\ \n\ @param\ \ p\ Proprietario\ que\ se\ encontra\ no\ sistema\n
comment11.params=opcao
comment11.target=void\ registoCorP(int)
comment11.text=\n\ Registra\ um\ novo\ Cliente\ ou\ Proprietario\n\ \n\ @param\ \ opcao\ Cliente(1)\ ou\ Proprietario(2)\n
comment12.params=email\ nome\ password\ morada\ data\ nif
comment12.target=void\ registoCliente(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ int)
comment12.text=\n\ Metodo\ que\ regista\ um\ cliente\ na\ aplica\u00E7ao\n\ \n\ @param\ \ email\ o\ email\ a\ registar\n\ @param\ \ nome\ o\ nome\ a\ registar\n\ @param\ \ oassword\ a\ pass\ a\ registar\n\ @param\ \ morada\ a\ morada\ a\ registar\n\ @param\ \ data\ a\ data\ a\ registar\n
comment13.params=email\ nome\ password\ morada\ data\ nif
comment13.target=void\ registoProprietario(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ int)
comment13.text=\n\ Metodo\ que\ regista\ um\ proprietario\ na\ aplica\u00E7ao\n\ \n\ @param\ \ email\ o\ email\ a\ registar\n\ @param\ \ nome\ o\ nome\ a\ registar\n\ @param\ \ oassword\ a\ pass\ a\ registar\n\ @param\ \ morada\ a\ morada\ a\ registar\n\ @param\ \ data\ a\ data\ a\ registar\n
comment14.params=
comment14.target=void\ login()
comment14.text=\n\ Login\ do\ utilizador(Cliente\ ou\ Proprietario)\n
comment15.params=c\ disponiveis\ opcao\ x\ y\ xDestino\ yDestino
comment15.target=void\ tipoAluguer(Cliente,\ java.util.List,\ int,\ double,\ double,\ double,\ double)
comment15.text=\n\ Metodo\ que\ procura\ o\ carro\ em\ conforme\ com\ a\ op\u00E7ao\ que\ o\ Cliente\ escolheu\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ opcao\ que\ o\ Cliente\ tomou\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment16.params=c\ disponiveis\ x\ y\ xDestino\ yDestino
comment16.target=void\ carroMaisProximo(Cliente,\ java.util.List,\ double,\ double,\ double,\ double)
comment16.text=\n\ Metodo\ que\ encontra\ o\ carro\ mais\ proximo\ e\ inicia\ o\ processo\ de\ efetuar\ viagem\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment17.params=c\ disponiveis\ x\ y\ xDestino\ yDestino
comment17.target=void\ carroMaisBarato(Cliente,\ java.util.List,\ double,\ double,\ double,\ double)
comment17.text=\n\ Metodo\ que\ encontra\ o\ carro\ mais\ barato\ e\ inicia\ o\ processo\ de\ efetuar\ viagem\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment18.params=c\ disponiveis\ x\ y\ xDestino\ yDestino
comment18.target=void\ carroBaratoProximo(Cliente,\ java.util.List,\ double,\ double,\ double,\ double)
comment18.text=\n\ Metodo\ que\ encontra\ o\ carro\ mais\ barato\ com\ condicionante\ de\ distancia\ e\ inicia\ o\ processo\ de\ efetuar\ viagem\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment19.params=c\ disponiveis\ x\ y\ xDestino\ yDestino
comment19.target=void\ carroEspecifico(Cliente,\ java.util.List,\ double,\ double,\ double,\ double)
comment19.text=\n\ Metodo\ que\ encontra\ um\ carro\ especifico\ e\ inicia\ o\ processo\ de\ efetuar\ viagem\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment2.params=
comment2.target=void\ carrega()
comment2.text=\n\ Carrega\ os\ dados\n
comment20.params=c\ disponiveis\ x\ y\ xDestino\ yDestino
comment20.target=void\ carroAutonomia(Cliente,\ java.util.List,\ double,\ double,\ double,\ double)
comment20.text=\n\ Metodo\ que\ encontra\ o\ carro\ com\ a\ autonimia\ desejada\ e\ inicia\ o\ processo\ de\ efetuar\ viagem\n\ \n\ @param\ \ c\ Cliente\ que\ se\ encontra\ no\ sistema\n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ y\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ destino\n
comment21.params=c\ v\ xDestino\ yDestino
comment21.target=void\ efetuarViagem(Cliente,\ Veiculo,\ double,\ double)
comment22.params=c
comment22.target=void\ perfilCli(Cliente)
comment22.text=\n\ Disponibiliza\ o\ perfil\ de\ um\ Cliente\n\ \n\ @param\ \ c\ o\ Cliente\ cujo\ perfil\ sera\ disponibilizado\n
comment23.params=p\ opcao
comment23.target=void\ tipoCarro(Proprietario,\ int)
comment23.text=\n\ Metodo\ que\ insere\ um\ novo\ veiculo\ no\ sistema\n\ \n\ @param\ \ p\ Proprietario\ que\ se\ encontra\ no\ sistema\n\ @param\ \ opcao\ do\ tipo\ de\ veiculo\ \n
comment24.params=p
comment24.target=void\ perfilProp(Proprietario)
comment24.text=\n\ Disponibiliza\ o\ perfil\ de\ um\ Proprietario\n\ \n\ @param\ \ p\ o\ Proprietario\ cujo\ perfil\ sera\ disponibilizado\n
comment25.params=op
comment25.target=void\ top10(int)
comment26.params=v\ distanciaViagem
comment26.target=boolean\ validaAutonomia(Veiculo,\ double)
comment26.text=\n\ Metodo\ que\ valida\ a\ autonomia\ apos\ um\ deslocamento\n\ \n\ @param\ \ v\ veiculo\ que\ se\ vai\ deslocar\n\ @param\ \ distanciaViagem\ distancia\ da\ viagem\n\ \n\ @return\ true\ caso\ a\ autonomia\ apos\ o\ deslocamento\ seja\ superior\ 0,\ false\ caso\ contrario\n
comment27.params=xy
comment27.target=double\ validaCoord(java.lang.String)
comment27.text=\n\ Metodo\ que\ valida\ um\ double\n\ \n\ @param\ \ xy\ string\ que\ contem\ o\ double\ ou\ uma\ frase\n
comment28.params=y
comment28.target=double\ validaCoordPositiva(java.lang.String)
comment28.text=\n\ Metodo\ que\ valida\ um\ double\ positivo\n\ \n\ @param\ \ xy\ string\ que\ contem\ um\ double\ ou\ uma\ fras\n
comment29.params=m
comment29.target=java.lang.String\ validaMatricula(java.lang.String)
comment29.text=\n\ Metodo\ que\ valida\ uma\ matricula\n\ \n\ @param\ \ xy\ string\ que\ contem\ a\ matricula\n
comment3.params=
comment3.target=void\ guarda()
comment3.text=\n\ Guarda\ os\ dados\n
comment30.params=classificacao
comment30.target=java.lang.Double\ validaClassificacao(java.lang.String)
comment30.text=\n\ Metodo\ que\ valida\ uma\ classificacao\n\ \n\ @param\ \ classificacao\ string\ que\ contem\ a\ classificacao\n
comment31.params=y\ com
comment31.target=double\ validaCombustivel(java.lang.String,\ double)
comment31.text=\n\ Metodo\ que\ valida\ um\ combustivel\n\ \n\ @param\ \ y\ string\ que\ contem\ uma\ frase\n\ @param\ \ com\ combustivel\ maximo\ de\ um\ carro\n
comment32.params=p
comment32.target=void\ faturaViaturas(Proprietario)
comment32.text=\nMETODOS\ AUXILIARES*******\n
comment33.params=p
comment33.target=void\ todos_AlugueresPro(Proprietario)
comment34.params=c
comment34.target=void\ todos_AlugueresCli(Cliente)
comment35.params=p
comment35.target=void\ alterarPreco(Proprietario)
comment36.params=p
comment36.target=void\ alterarDisponibilidade(Proprietario)
comment37.params=p
comment37.target=void\ abastecer(Proprietario)
comment38.params=in
comment38.target=java.time.LocalDate\ convertToDate(java.lang.String)
comment38.text=\n\ Metodo\ que\ converte\ uma\ string\ numa\ variavel\ do\ tipo\ Date\n\ \n\ @param\ \ input\ a\ string\ a\ converter\n\ \n\ @return\ Date\ caso\ o\ input\ corresponda\ a\ uma\ data\ valida\ no\ formato\ valido,\ null\ caso\ o\ contrario\n
comment4.params=
comment4.target=void\ menu_Inicial()
comment4.text=\n\ Executa\ o\ menu\ principal\ e\ invoca\ o\ m\u00E9todo\ correspondente\ \u00E0\ op\u00E7\u00E3o\ seleccionada.\n
comment5.params=
comment5.target=void\ menu_Registo()
comment5.text=\n\ Metodo\ responsavel\ por\ distinguir\ o\ registo\ que\ seguidamente\ sera\ feito(Cliente\ ou\ Proprietario)\n
comment6.params=args
comment6.target=void\ main(java.lang.String[])
comment6.text=\n\ Main\ cria\ a\ aplica\u00E7\u00E3o\ e\ invoca\ o\ m\u00E9todo\ exec\n
comment7.params=c
comment7.target=void\ menu_Cliente(Cliente)
comment7.text=\n\ Metodo\ que\ disponibiliza\ um\ menu\ de\ op\u00E7oes\ ao\ Cliente\ apos\ login\n\ \n\ @param\ \ c\ o\ Cliente\ que\ acabou\ de\ dar\ login\n
comment8.params=p
comment8.target=void\ menu_Proprietario(Proprietario)
comment8.text=\n\ Metodo\ que\ disponibiliza\ um\ menu\ de\ op\u00E7oes\ ao\ Proprietario\ apos\ login\n\ \n\ @param\ \ p\ o\ Proprietario\ que\ acabou\ de\ dar\ login\n
comment9.params=c\ lista
comment9.target=void\ menu_Viagem(Cliente,\ java.util.List)
comment9.text=\n\ Metodo\ que\ disponibiliza\ um\ menu\ de\ opcoes\ de\ viagem\ para\ o\ Cliente\n\ \n\ @param\ \ c\ o\ Cliente\ que\ efetuara\ a\ viagem\n
numComments=39
