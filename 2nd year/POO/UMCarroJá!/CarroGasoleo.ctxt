#BlueJ class context
comment0.target=CarroGasoleo
comment0.text=\n\ CarroGasoleo\n\ \n\ @author\ (Ana\ Rita\ Rosendo,\ Gon\u00E7alo\ Esteves,\ Rui\ Oliveira)\ \n\ @version\ 29\ de\ abril\ de\ 2019\n
comment1.params=
comment1.target=CarroGasoleo()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ CarroGasoleo\ (por\ omissao)\n
comment10.params=
comment10.target=CarroGasoleo\ clone()
comment10.text=\n\ Metodo\ que\ duplica\ o\ carro\n\ \n\ @return\ \ \ \ \ o\ clone\ do\ carro\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ Metodo\ que\ verifica\ se\ dois\ carros\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\ a\ comparar\n\ \n\ @return\ \ \ \ \ o\ resultado\ da\ comparacao\ dos\ objetos\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Metodo\ que\ converte\ um\ carro\ para\ uma\ string\n\ \n\ @return\ \ \ \ \ o\ carro\ em\ string\n
comment13.params=
comment13.target=double\ determinaAutonomia()
comment13.text=\n\ Metodo\ que\ determina\ a\ autonomia\ do\ carro\ (quantidade\ disponivel\ de\ bateria),\ em\ percentagem\n\ \n\ @return\ \ \ \ \ a\ autonomia\ \n
comment14.params=d
comment14.target=double\ autonomiaAposDeslocamento(double)
comment14.text=\n\ Metodo\ que\ determina\ a\ autonomia\ do\ veiculo\ apos\ deslocamento,\ em\ percentagem\n\ \n\ @param\ \ d\ \ \ a\ distancia\ a\ percorrer\n\ \n\ @return\ \ \ \ \ a\ autonomia\ \n
comment15.params=d
comment15.target=void\ combAposDeslocamento(double)
comment15.text=\n\ Metodo\ que\ determina\ o\ combustivel\ do\ veiculo\ apos\ deslocamento\n\ \n\ @param\ \ d\ \ \ a\ distancia\ a\ percorrer\n\ \n\ @return\ \ \ \ \ o\ combustivel\n
comment2.params=m\ v\ p\ al\ cla\ tf\ x\ y\ d\ con\ com\ comm
comment2.target=CarroGasoleo(java.lang.String,\ double,\ double,\ java.util.List,\ double,\ double,\ double,\ double,\ boolean,\ double,\ double,\ double)
comment2.text=\n\ Construtor\ para\ objetos\ da\ classe\ CarroGasoleo\ (por\ parametrizacao)\n\ \n\ @param\ \ m\ \ \ a\ matricula\n\ @param\ \ v\ \ \ a\ velocidade\ por\ km\n\ @param\ \ p\ \ \ o\ preco\ por\ km\n\ @param\ \ al\ \ \ os\ alugueres\n\ @param\ \ cla\ \ \ a\ classificacao\n\ @param\ \ tf\ \ \ o\ total\ faturado\n\ @param\ \ x\ \ \ a\ coordenada\ x\ da\ localizacao\n\ @param\ \ y\ \ \ a\ coordenada\ y\ da\ localizacao\n\ @param\ \ d\ \ \ a\ disponibilidade\n\ @param\ \ c\ \ \ o\ consumo\ por\ km\n\ @param\ \ com\ \ \ o\ combustivel\n\ @param\ \ comm\ \ \ o\ combustivel\ maximo\n
comment3.params=v
comment3.target=CarroGasoleo(CarroGasoleo)
comment3.text=\n\ Construtor\ para\ objetos\ da\ classe\ CarroGasoleo\ (por\ copia)\n\ \n\ @param\ \ v\ \ \ o\ carro\ a\ copiar\n
comment4.params=
comment4.target=double\ getConsumo()
comment4.text=\n\ Metodo\ que\ devolve\ o\ consumo\ por\ km\ do\ carro\n\ \n\ @return\ \ \ \ \ o\ consumo\ por\ km\ \n
comment5.params=x
comment5.target=void\ setConsumo(double)
comment5.text=\n\ Metodo\ que\ altera\ o\ consumo\ por\ km\ de\ um\ carro\n\n\ @param\ \ x\ \ \ o\ novo\ consumo\ \n
comment6.params=
comment6.target=double\ getCombustivel()
comment6.text=\n\ Metodo\ que\ devolve\ o\ combustivel\ do\ carro\n\ \n\ @return\ \ \ \ \ o\ combustivel\ do\ carro\n
comment7.params=y
comment7.target=void\ setCombustivel(double)
comment7.text=\n\ Metodo\ que\ altera\ o\ combustivel\n\ \n\ @param\ \ y\ \ \ o\ novo\ combustivel\n
comment8.params=
comment8.target=double\ getCombustivelMax()
comment8.text=\n\ Metodo\ que\ devolve\ o\ combustivel\ maximo\ do\ carro\n\ \n\ @return\ \ \ \ \ o\ combustivel\ maximo\ do\ carro\n
comment9.params=y
comment9.target=void\ setCombustivelMax(double)
comment9.text=\n\ Metodo\ que\ altera\ o\ combustivel\ maximo\n\ \n\ @param\ \ y\ \ \ o\ novo\ combustivel\ maximo\n
numComments=16
