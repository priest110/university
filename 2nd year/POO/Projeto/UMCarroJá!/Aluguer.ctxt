#BlueJ class context
comment0.target=Aluguer
comment0.text=\n\ Aluguer\ -\ interface\ onde\ vao\ ser\ guardados\ os\ dados\ de\ um\ aluguer\n\ \n\ @author\ (seu\ nome)\ \n\ @version\ (n\u00FAmero\ da\ vers\u00E3o\ ou\ data)\n
comment1.params=
comment1.target=java.lang.String\ getEmailCli()
comment1.text=\n\ Metodo\ que\ devolve\ o\ email\ do\ cliente\n\ \n\ @return\ \ \ \ \ o\ email\ do\ cliente\ \n
comment10.params=c
comment10.target=void\ setCusto(double)
comment10.text=\n\ Metodo\ que\ altera\ o\ custo\ de\ uma\ viagem\n\ \n\ @param\ \ c\ \ \ o\ custo\ da\ viagem\n
comment11.params=
comment11.target=double\ getPendente()
comment11.text=\n\ Metodo\ que\ devolve\ o\ estado\ do\ aluguer\n\ \n\ @return\ \ \ \ \ o\ estado\ do\ aluguer\n
comment12.params=p
comment12.target=void\ setPendente(double)
comment12.text=\n\ Metodo\ que\ altera\ o\ estado\ do\ aluguer\n\ \n\ @param\ \ c\ \ \ o\ estado\ do\ aluguer\n
comment13.params=
comment13.target=double\ getLocalX()
comment13.text=\n\ Metodo\ que\ devolve\ a\ coordenada\ X\ de\ um\ dado\ cliente\n\ \n\ @return\ \ \ \ \ a\ coordenada\ X\ do\ cliente\ \n
comment14.params=x
comment14.target=void\ setLocalX(double)
comment14.text=\n\ Metodo\ que\ altera\ a\ coordenada\ X\ de\ um\ dado\ cliente\n\ \n\ @param\ \ x\ \ \ a\ nova\ coordenada\ X\n
comment15.params=
comment15.target=double\ getLocalY()
comment15.text=\n\ Metodo\ que\ devolve\ a\ coordenada\ Y\ de\ um\ dado\ cliente\n\ \n\ @return\ \ \ \ \ a\ coordenada\ Y\ do\ cliente\ \n
comment16.params=y
comment16.target=void\ setLocalY(double)
comment16.text=\n\ Metodo\ que\ altera\ a\ coordenada\ Y\ de\ um\ dado\ cliente\n\ \n\ @param\ \ y\ \ \ a\ nova\ coordenada\ Y\n
comment17.params=
comment17.target=Aluguer\ clone()
comment17.text=\n\ Metodo\ que\ duplica\ o\ aluguer\n\ \n\ @return\ \ \ \ \ o\ clone\ do\ aluguer\n
comment18.params=o
comment18.target=boolean\ equals(java.lang.Object)
comment18.text=\n\ Metodo\ que\ verifica\ se\ dois\ alugueres\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\ a\ comparar\n\ \n\ @return\ \ \ \ \ o\ resultado\ da\ comparacao\ dos\ dois\ alugueres\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ Metodo\ que\ converte\ um\ cliente\ para\ uma\ string\n\ \n\ @return\ \ \ \ \ o\ cliente\ em\ string\n
comment2.params=em
comment2.target=void\ setEmailCli(java.lang.String)
comment2.text=\n\ Metodo\ que\ altera\ o\ email\ do\ cliente\n\ \n\ @param\ \ em\ \ \ o\ novo\ email\ \n
comment20.params=
comment20.target=int\ hashCode()
comment20.text=\n\ Metodo\ que\ devolve\ o\ codigo\ de\ hash\ para\ um\ cliente\n\ \n\ @return\ \ \ \ \ o\ hashcode\n
comment21.params=c
comment21.target=int\ compareTo(AluguerCarro)
comment21.text=\n\ Metodo\ que\ implementa\ a\ ordem\ natural\ de\ comparacao\ de\ instancias\ de\ AluguerCarro\n
comment3.params=
comment3.target=java.lang.String\ getEmailPro()
comment3.text=\n\ Metodo\ que\ devolve\ o\ nome\ do\ proprietario\n\ \n\ @return\ \ \ \ \ o\ nome\ do\ proprietario\ \n
comment4.params=em
comment4.target=void\ setEmailPro(java.lang.String)
comment4.text=\n\ Metodo\ que\ altera\ o\ nome\ do\ proprietario\n\ \n\ @param\ \ em\ \ \ o\ novo\ email\n
comment5.params=
comment5.target=java.lang.String\ getMatricula()
comment5.text=\n\ Metodo\ que\ devolve\ a\ matricula\n\ \n\ @return\ \ \ \ \ a\ matricula\ \n
comment6.params=m
comment6.target=void\ setMatricula(java.lang.String)
comment6.text=\n\ Metodo\ que\ altera\ a\ matricula\n\ \n\ @param\ \ m\ \ \ a\ nova\ matricula\n
comment7.params=
comment7.target=double\ getKm()
comment7.text=\n\ Metodo\ que\ devolve\ os\ quilometros\ percorridos\n\ \n\ @return\ \ \ \ \ os\ quilometros\ percorridos\ \n
comment8.params=k
comment8.target=void\ setKm(double)
comment8.text=\n\ Metodo\ que\ altera\ os\ quilometros\ percorridos\n\ \n\ @param\ \ k\ \ \ os\ quilometros\ percorridos\n
comment9.params=
comment9.target=double\ getCusto()
comment9.text=\n\ Metodo\ que\ devolve\ o\ custo\ da\ viagem\n\ \n\ @return\ \ \ \ \ o\ custo\ da\ viagem\ \n
numComments=22
