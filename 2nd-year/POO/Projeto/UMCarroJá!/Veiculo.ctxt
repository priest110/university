#BlueJ class context
comment0.target=Veiculo
comment0.text=\n\ Veiculo\n\ \n\ @author\ (Ana\ Rita\ Rosendo,\ Gon\u00E7alo\ Esteves,\ Rui\ Oliveira)\ \n\ @version\ 29\ de\ abril\ de\ 2019\n
comment1.params=
comment1.target=Veiculo()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ Veiculo\ (por\ omissao)\n
comment10.params=
comment10.target=java.util.List\ getAlugueresCarro()
comment10.text=\n\ Metodo\ que\ devolve\ os\ alugueres\ de\ um\ veiculo\n\ \n\ @return\ \ \ \ \ os\ alugueres\ do\ veiculo\n
comment11.params=al
comment11.target=void\ setAlugueresCarro(java.util.List)
comment11.text=\n\ Metodo\ que\ altera\ os\ alugueres\ de\ um\ veiculo\n\ \n\ @param\ \ al\ \ \ os\ novos\ alugueres\ do\ veiculo\ \n
comment12.params=
comment12.target=double\ getClassificacaoCarro()
comment12.text=\n\ Metodo\ que\ devolve\ a\ classificacao\ de\ um\ dado\ veiculo\n\ \n\ @return\ \ \ \ \ a\ classificacao\ do\ veiculo\n
comment13.params=cla
comment13.target=void\ setClassificacaoCarro(double)
comment13.text=\n\ Metodo\ que\ altera\ a\ classificacao\ de\ um\ dado\ veiculo\n\ \n\ @param\ \ cla\ \ \ a\ nova\ classificacao\ do\ veiculo\n
comment14.params=
comment14.target=double\ getTotalFaturado()
comment14.text=\n\ Metodo\ que\ devolve\ o\ total\ fatarudo\ por\ um\ dado\ veiculo\n\ \n\ @return\ \ \ \ \ o\ total\ fatarudo\ por\ um\ dado\ veiculo\n
comment15.params=t
comment15.target=void\ setTotalFaturado(double)
comment15.text=\n\ Metodo\ que\ altera\ o\ total\ fatarudo\ por\ um\ dado\ veiculo\n\ \n\ @param\ \ t\ \ \ o\ total\ fatarudo\ por\ um\ dado\ veiculo\n
comment16.params=
comment16.target=double\ getLocalX()
comment16.text=\n\ Metodo\ que\ devolve\ a\ coordenada\ X\ de\ um\ dado\ veiculo\n\ \n\ @return\ \ \ \ \ a\ coordenada\ X\ do\ veiculo\n
comment17.params=x
comment17.target=void\ setLocalX(double)
comment17.text=\n\ Metodo\ que\ altera\ a\ coordenada\ X\ de\ um\ dado\ veiculo\n\ \n\ @param\ \ x\ \ \ a\ nova\ coordenada\ X\ do\ veiculo\n
comment18.params=
comment18.target=double\ getLocalY()
comment18.text=\n\ Metodo\ que\ devolve\ a\ coordenada\ Y\ de\ um\ dado\ veiculo\n\ \n\ @return\ \ \ \ \ a\ coordenada\ Y\ do\ veiculo\n
comment19.params=y
comment19.target=void\ setLocalY(double)
comment19.text=\n\ Metodo\ que\ altera\ a\ coordenada\ Y\ de\ um\ dado\ veiculo\n\ \n\ @param\ \ y\ \ \ a\ nova\ coordenada\ Y\ do\ veiculo\n
comment2.params=m\ v\ p\ al\ cla\ tf\ x\ y\ d
comment2.target=Veiculo(java.lang.String,\ double,\ double,\ java.util.List,\ double,\ double,\ double,\ double,\ boolean)
comment2.text=\n\ Construtor\ para\ objetos\ da\ classe\ Veiculo\ (por\ parametrizacao)\n\ \n\ @param\ \ m\ \ \ a\ matricula\n\ @param\ \ v\ \ \ a\ velocidade\ por\ km\n\ @param\ \ p\ \ \ o\ preco\ por\ km\n\ @param\ \ al\ \ \ os\ alugueres\n\ @param\ \ cla\ \ \ a\ classificacao\n\ @param\ \ tf\ \ \ o\ total\ faturado\n\ @param\ \ x\ \ \ a\ coordenada\ x\ da\ localizacao\n\ @param\ \ y\ \ \ a\ coordenada\ y\ da\ localizacao\n\ @param\ \ d\ \ \ a\ disponibilidade\n
comment20.params=
comment20.target=boolean\ getDisponivel()
comment20.text=\n\ Metodo\ que\ devolve\ a\ disponibilidade\ de\ um\ dado\ veiculo\n\ \n\ @return\ \ \ \ \ a\ disponibilidade\ do\ veiculo\n
comment21.params=d
comment21.target=void\ setDisponivel(boolean)
comment21.text=\n\ Metodo\ que\ altera\ a\ disponibilidade\ de\ um\ dado\ veiculo\n\ \n\ @param\ \ d\ \ \ a\ nova\ disponibilidade\ do\ veiculo\n
comment22.params=a
comment22.target=void\ insereAluguer(Aluguer)
comment22.text=\n\ Metodo\ que\ insere\ um\ aluguer\ na\ lista\ de\ alugueres\n\ \n\ @param\ \ a\ \ \ aluguer\ a\ ser\ inserido\n
comment23.params=
comment23.target=void\ verificaAutonomia()
comment23.text=\n\ Metodo\ que\ verifica\ a\ autonomia\n
comment24.params=cla
comment24.target=void\ alteraClassificacao(double)
comment24.text=\n\ Metodo\ que\ altera\ a\ classificacao\n
comment25.params=
comment25.target=Veiculo\ clone()
comment25.text=\n\ Metodo\ que\ duplica\ o\ veiculo\n\ \n\ @return\ \ \ \ \ o\ clone\ do\ veiculo\n
comment26.params=o
comment26.target=boolean\ equals(java.lang.Object)
comment26.text=\n\ Metodo\ que\ verifica\ se\ dois\ veiculos\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\ a\ comparar\n\ \n\ @return\ \ \ \ \ o\ resultado\ da\ comparacao\ dos\ objetos\n
comment27.params=
comment27.target=java.lang.String\ toString()
comment27.text=\n\ Metodo\ que\ converte\ um\ veiculo\ para\ uma\ string\n\ \n\ @return\ \ \ \ \ o\ veiculo\ em\ string\n
comment28.params=
comment28.target=double\ determinaAutonomia()
comment28.text=\n\ Metodo\ que\ determina\ a\ autonomia\ do\ veiculo\ (quantidade\ disponivel\ de\ combustivel/bateria),\ em\ percentagem\n\ \n\ @return\ \ \ \ \ a\ autonomia\ \n
comment29.params=d
comment29.target=double\ autonomiaAposDeslocamento(double)
comment29.text=\n\ Metodo\ que\ determina\ a\ autonomia\ do\ veiculo\ apos\ deslocamento,\ em\ percentagem\n\ \n\ @param\ \ d\ \ \ a\ distancia\ a\ percorrer\n\ \n\ @return\ \ \ \ \ a\ autonomia\ \n
comment3.params=v
comment3.target=Veiculo(Veiculo)
comment3.text=\n\ Construtor\ para\ objetos\ da\ classe\ Veiculo\ (por\ copia)\n\ \n\ @param\ \ v\ \ \ o\ veiculo\ a\ copiar\n
comment30.params=d
comment30.target=void\ combAposDeslocamento(double)
comment30.text=\n\ Metodo\ que\ determina\ o\ combustivel\ do\ veiculo\ apos\ deslocamento\n\ \n\ @param\ \ d\ \ \ a\ distancia\ a\ percorrer\n\ \n\ @return\ \ \ \ \ o\ combustivel\n
comment4.params=
comment4.target=java.lang.String\ getMatricula()
comment4.text=\n\ Metodo\ que\ devolve\ a\ matricula\n\ \n\ @return\ \ \ \ \ a\ matricula\ \n
comment5.params=m
comment5.target=void\ setMatricula(java.lang.String)
comment5.text=\n\ Metodo\ que\ altera\ a\ matricula\n\ \n\ @param\ \ m\ \ \ a\ nova\ matricula\n
comment6.params=
comment6.target=double\ getVelocidade()
comment6.text=\n\ Metodo\ que\ devolve\ a\ velocidade\ do\ veiculo\n\ \n\ @return\ \ \ \ \ a\ velocidade\ do\ veiculo\n
comment7.params=v
comment7.target=void\ setVelocidade(double)
comment7.text=\n\ Metodo\ que\ altera\ a\ velocidade\ do\ veiculo\n\ \n\ @param\ \ k\ \ \ a\ velocidade\ do\ veiculo\n
comment8.params=
comment8.target=double\ getPreco()
comment8.text=\n\ Metodo\ que\ devolve\ o\ pre\u00E7o\ por\ km\n\ \n\ @return\ \ \ \ \ o\ pre\u00E7o\ por\ km\n
comment9.params=p
comment9.target=void\ setPreco(double)
comment9.text=\n\ Metodo\ que\ altera\ o\ pre\u00E7o\ por\ km\n\ \n\ @param\ \ k\ \ \ o\ pre\u00E7o\ por\ km\n
numComments=31
