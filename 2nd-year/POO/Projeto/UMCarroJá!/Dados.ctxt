#BlueJ class context
comment0.target=Dados
comment0.text=\n\ Dados\ -\ Registo\ com\ todos\ os\ veiculos,\ clientes\ e\ proprietarios\ existentes\ no\ sistema.\n\ \n\ @author\ (Ana\ Rita\ Rosendo,\ Gon\u00E7alo\ Esteves,\ Rui\ Oliveira)\ \n\ @version\ 21\ de\ maio\ de\ 2019\n
comment1.params=
comment1.target=Dados()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ Dados\ (por\ omissao)\n
comment10.params=
comment10.target=Dados\ clone()
comment10.text=\n\ Metodo\ que\ duplica\ os\ dados\n\ \n\ @return\ \ \ o\ clone\ dos\ dados\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ Metodo\ que\ verifica\ se\ dois\ conjuntos\ de\ dados\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\ a\ comparar\n\ \n\ @return\ \ \ \ \ o\ resultado\ da\ comparacao\ dos\ objetos\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Metodo\ que\ converte\ um\ conjunto\ de\ dados\ para\ uma\ string\n\ \n\ @return\ \ \ \ \ o\ conjunto\ de\ dados\ em\ string\n
comment13.params=
comment13.target=int\ hashCode()
comment13.text=\n\ Metodo\ que\ devolve\ o\ codigo\ de\ hash\ para\ um\ proprietario\n\ \n\ @return\ \ \ \ \ o\ hashcode\n
comment14.params=cli
comment14.target=void\ registarCliente(Cliente)
comment14.text=\n\ Metodo\ que\ insere\ um\ Cliente\ no\ conjunto\ de\ dados\n\ \n\ @param\ \ cli\ \ \ o\ novo\ cliente\n
comment15.params=pro
comment15.target=void\ registarProprietario(Proprietario)
comment15.text=\n\ Metodo\ que\ insere\ um\ Proprietario\ no\ conjunto\ de\ dados\n\ \n\ @param\ \ pro\ \ \ o\ novo\ proprietario\n
comment16.params=vei\ pro
comment16.target=void\ insereVeiculo(Veiculo,\ Proprietario)
comment16.text=\n\ Metodo\ que\ insere\ um\ veiculo\ num\ conjunto\ de\ dados\n\ \n\ @param\ \ vei\ \ \ o\ veiculo\ a\ ser\ inserido\n\ @param\ \ pro\ \ \ o\ proprietario\ do\ veiculo\n
comment17.params=email\ matricula\ a
comment17.target=void\ insereAluguerPro(java.lang.String,\ java.lang.String,\ Aluguer)
comment18.params=email\ a
comment18.target=void\ insereAluguerCliente(java.lang.String,\ Aluguer)
comment19.params=email\ pass
comment19.target=boolean\ loginCliente(java.lang.String,\ java.lang.String)
comment19.text=\n\ Metodo\ que\ valida\ o\ login\ de\ um\ cliente\n\ \n\ @param\ \ email\ \ \ o\ email\ do\ cliente\n\ @param\ \ pass\ \ \ a\ password\ do\ cliente\n\ \n\ @return\ \ true\ se\ os\ dados\ forem\ validos,\ false\ em\ caso\ contrario\n
comment2.params=cli\ pro\ vei
comment2.target=Dados(java.util.Map,\ java.util.Map,\ java.util.Map)
comment2.text=\n\ Construtor\ para\ objetos\ da\ classe\ Dados\ (parameterizado)\n\ \n\ @param\ \ cli\ \ \ os\ clientes\n\ @param\ \ pro\ \ \ os\ proprietarios\n\ @param\ \ vei\ \ \ os\ veiculos\n
comment20.params=email
comment20.target=boolean\ emailValido(java.lang.String)
comment20.text=\n\ Metodo\ que\ valida\ o\ email\n\ \n\ @param\ \ email\ \ \ o\ email\n\ \n\ @return\ \ true\ se\ o\ email\ for\ valido,\ false\ em\ caso\ contrario\n
comment21.params=email
comment21.target=boolean\ existeEmail(java.lang.String)
comment21.text=\n\ Metodo\ que\ verifica\ a\ existencia\ do\ email\ \n\ \n\ @param\ \ email\ \ \ o\ email\ \n\ \n\ @return\ \ true\ se\ o\ email\ existir,\ false\ em\ caso\ contrario\n
comment22.params=matr
comment22.target=boolean\ existeMatricula(java.lang.String)
comment22.text=\n\ Metodo\ que\ verifica\ a\ existencia\ da\ matricula\n\ \n\ @param\ \ matr\ \ \ a\ matricula\n\ \n\ @return\ \ true\ se\ a\ matricula\ existir,\ false\ em\ caso\ contrario\n
comment23.params=email\ pass
comment23.target=boolean\ loginProprietario(java.lang.String,\ java.lang.String)
comment23.text=\n\ Metodo\ que\ valida\ o\ login\ de\ um\ proprietario\n\ \n\ @param\ \ email\ \ \ o\ email\ do\ proprietario\n\ @param\ \ pass\ \ \ a\ password\ do\ proprietario\n\ \n\ @return\ \ true\ se\ os\ dados\ forem\ validos,\ false\ em\ caso\ contrario\n
comment24.params=
comment24.target=java.util.List\ top10_Utilizacao()
comment24.text=\nMETODOS\ AUXILIARES*******\n
comment25.params=
comment25.target=java.util.List\ top10_Distancia()
comment26.params=email
comment26.target=Cliente\ mailToCliente(java.lang.String)
comment26.text=\n\ Metodo\ que\ dado\ o\ email,\ diz-nos\ a\ que\ Cliente\ corresponde\ o\ email,\ caso\ corresponda\n\ \n\ @param\ \ email\ o\ email\ a\ testar\n\ \n\ @return\ Cliente\ caso\ corresponda\ o\ email,\ null\ caso\ contrario\n
comment27.params=matricula
comment27.target=Proprietario\ veiculoToProprietario(java.lang.String)
comment27.text=\n\ Metodo\ que\ dado\ o\ veiculo,\ diz-nos\ a\ que\ Proprietario\ corresponde\ o\ veiculo,\ caso\ corresponda\n\ \n\ @param\ \ v\ o\ veiculo\ a\ testar\n\ \n\ @return\ Proprietario\ caso\ corresponda\ o\ veiculo,\ null\ caso\ contrario\n
comment28.params=email
comment28.target=Proprietario\ mailToProprietario(java.lang.String)
comment28.text=\n\ Metodo\ que\ dado\ o\ email,\ diz-nos\ a\ que\ Proprietario\ corresponde\ o\ email,\ caso\ corresponda\n\ \n\ @param\ \ email\ o\ email\ a\ testar\n\ \n\ @return\ Proprietario\ caso\ corresponda\ o\ email,\ null\ caso\ contrario\n
comment29.params=m
comment29.target=Veiculo\ matriculaToVeiculo(java.lang.String)
comment29.text=\n\ Metodo\ que\ dado\ o\ email,\ diz-nos\ a\ que\ Proprietario\ corresponde\ o\ email,\ caso\ corresponda\n\ \n\ @param\ \ email\ o\ email\ a\ testar\n\ \n\ @return\ Proprietario\ caso\ corresponda\ o\ email,\ null\ caso\ contrario\n
comment3.params=d
comment3.target=Dados(Dados)
comment3.text=\n\ Construtor\ para\ objetos\ da\ classe\ Dados\ (de\ copia)\n\ \n\ @param\ \ d\ \ \ os\ dados\n
comment30.params=
comment30.target=java.util.List\ tipoCarroGasolina()
comment30.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ veiculos\ do\ tipo\ CarroGasolina\n\ \n\ @return\ lista\ de\ veiculos\ do\ tipo\ CarroGasolina,\ null\ caso\ contrario\n
comment31.params=
comment31.target=java.util.List\ tipoCarroGasoleo()
comment31.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ veiculos\ do\ tipo\ CarroGasoleo\n\ \n\ @return\ lista\ de\ veiculos\ do\ tipo\ CarroGasoleo,\ null\ caso\ contrario\n
comment32.params=
comment32.target=java.util.List\ tipoCarroHibrido()
comment32.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ veiculos\ do\ tipo\ CarroHibrido\n\ \n\ @return\ lista\ de\ veiculos\ do\ tipo\ CarroHibrido,\ null\ caso\ contrario\n
comment33.params=
comment33.target=java.util.List\ tipoCarroEletrico()
comment33.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ veiculos\ do\ tipo\ CarroEletrico\n\ \n\ @return\ lista\ de\ veiculos\ do\ tipo\ CarroEletrico,\ null\ caso\ contrario\n
comment34.params=x1\ y1\ x2\ y2
comment34.target=double\ dist(double,\ double,\ double,\ double)
comment34.text=\n\ Metodo\ que\ devolve\ a\ distancia\ entre\ dois\ pontos\ \n\ \n\ @param\ \ x1\ a\ coordenada\ x\ atual\n\ @param\ \ y1\ a\ coordenada\ y\ atual\n\ @param\ \ x2\ a\ coordenada\ x\ destino\n\ @param\ \ y2\ a\ coordenada\ y\ destino\n\ \n\ @return\ dist\ percorrida\ de\ um\ ponto\ ao\ outro\n
comment35.params=
comment35.target=java.util.List\ veiculosDisponiveis()
comment36.params=disponiveis\ c\ x\ y
comment36.target=Veiculo\ proximo(java.util.List,\ Cliente,\ double,\ double)
comment36.text=\n\ Metodo\ que\ devolve\ o\ veiculo\ disponivel\ mais\ proximo\ das\ coordenadas\ x\ e\ y\n\ \n\ @param\ \ veiculos\ lista\ de\ veiculos\ da\ aplicacao\n\ @param\ \ c\ Cliente\ que\ procura\ o\ carro\ mais\ proximo\n\ @param\ \ x1\ a\ coordenada\ x\ atual\n\ @param\ \ y1\ a\ coordenada\ y\ atual\n\ \n\ @return\ proximo\ veiculo\ mais\ proximo\n
comment37.params=disponiveis\ c\ x\ y
comment37.target=Veiculo\ barato(java.util.List,\ Cliente,\ double,\ double)
comment37.text=\n\ Metodo\ que\ devolve\ o\ veiculo\ disponivel\ mais\ barato\n\ \n\ @param\ \ veiculos\ lista\ de\ veiculos\ da\ aplicacao\n\ @param\ \ c\ Cliente\ que\ procura\ o\ carro\ mais\ barato\n\ @param\ \ x1\ a\ coordenada\ x\ atual\n\ @param\ \ y1\ a\ coordenada\ y\ atual\n\ \n\ @return\ barato\ veiculo\ mais\ barato\n
comment38.params=disponiveis\ c\ x\ y\ dist
comment38.target=Veiculo\ baratoProximo(java.util.List,\ Cliente,\ double,\ double,\ double)
comment38.text=\n\ Metodo\ que\ devolve\ o\ veiculo\ disponivel\ mais\ barato\ numa\ condicionante\ de\ distancia\n\ \n\ @param\ \ veiculos\ lista\ de\ veiculos\ da\ aplicacao\n\ @param\ \ c\ Cliente\ que\ procura\ o\ carro\ mais\ barato\ tendo\ em\ conta\ a\ distancia\ que\ pretende\ fazer\ a\ pe\ no\ maximo\n\ @param\ \ x1\ a\ coordenada\ x\ atual\n\ @param\ \ y1\ a\ coordenada\ y\ atual\n\ @param\ dist\ a\ distancia\ que\ o\ cliente\ pretende\ fazer\ no\ maximo\ ate\ ao\ carro\n\ \n\ @return\ baratoProximo\ veiculo\ mais\ barato\ com\ a\ condicionante\ de\ distancia\n
comment39.params=disponiveis\ c\ x\ y\ autonomia
comment39.target=Veiculo\ autonomia(java.util.List,\ Cliente,\ double,\ double,\ double)
comment39.text=\n\ Metodo\ que\ devolve\ o\ veiculo\ com\ a\ autonomia\ desejada\n\ \n\ @param\ \ veiculos\ lista\ de\ veiculos\ da\ aplicacao\n\ @param\ \ c\ Cliente\ que\ procura\ o\ carro\ com\ determinada\ autonomia\n\ @param\ \ x1\ a\ coordenada\ x\ atual\n\ @param\ \ y1\ a\ coordenada\ y\ atual\n\ @param\ autonomia\ desejada\ pelo\ Cliente\n\ \n\ @return\ autonomia\ veiculo\ com\ determinada\ autonomia\n
comment4.params=
comment4.target=java.util.Map\ getClientes()
comment4.text=\n\ Metodo\ que\ devolve\ os\ clientes\ de\ um\ conjunto\ de\ dados\n\ \n\ @return\ \ \ \ \ os\ clientes\ dos\ dados\n
comment40.params=nome
comment40.target=boolean\ nomeValido(java.lang.String)
comment40.text=\n\ Metodo\ que\ verifica\ se\ um\ nome\ e\ valido\n\ \n\ @param\ \ nome\ o\ nome\ a\ testar\n\ \n\ @return\ true\ caso\ corresponda\ a\ um\ nome\ verdadeiro,\ false\ caso\ contrario\n
comment41.params=password\ pass
comment41.target=boolean\ passwordValida(java.lang.String,\ java.lang.String)
comment41.text=\n\ Metodo\ que\ verifica\ se\ a\ password\ de\ confirma\u00E7ao\ coincide\ com\ a\ inserida\ \n\ \n\ @param\ \ password\ a\ password\ inserida\n\ @param\ \ pass\ a\ password\ a\ confirmar\ se\ coincide\n\ \n\ @return\ true\ caso\ correspondam,\ false\ caso\ contrario\n
comment42.params=nomeFicheiro
comment42.target=Dados\ abrirFicheiro(java.lang.String)
comment42.text=\n\ Metodo\ que\ abre\ um\ ficheiro\n\ \n\ @return\ Dados\ do\ ficheiro\ lido\n
comment43.params=nomeFicheiro
comment43.target=void\ guardaFicheiro(java.lang.String)
comment43.text=\n\ Metodo\ que\ guarda\ os\ dados\ num\ ficheiro\n\ \n
comment44.params=fich
comment44.target=void\ carregaLogs(java.lang.String)
comment45.params=fich
comment45.target=java.util.List\ lerLogs(java.lang.String)
comment46.params=csv
comment46.target=void\ adicionaLinha(java.lang.String)
comment47.params=c\ v\ xDestino\ yDestino
comment47.target=void\ efetuarAluguer(Cliente,\ Veiculo,\ double,\ double)
comment48.params=v\ distanciaViagem
comment48.target=boolean\ validaAutonomia(Veiculo,\ double)
comment48.text=\n\ Metodo\ que\ valida\ a\ autonomia\ apos\ um\ deslocamento\n\ \n\ @param\ \ v\ veiculo\ que\ se\ vai\ deslocar\n\ @param\ \ distanciaViagem\ distancia\ da\ viagem\n\ \n\ @return\ true\ caso\ a\ autonomia\ apos\ o\ deslocamento\ seja\ superior\ 0,\ false\ caso\ contrario\n
comment49.params=nif
comment49.target=Proprietario\ nifToProprietario(int)
comment5.params=cli
comment5.target=void\ setClientes(java.util.Map)
comment5.text=\n\ Metodo\ que\ altera\ os\ clientes\ de\ um\ conjunto\ de\ cados\n\ \n\ @param\ \ cli\ \ \ os\ novos\ clientes\n
comment50.params=nif
comment50.target=Cliente\ nifToCliente(int)
comment51.params=x\ y\ xDestino\ yDestino\ velocidade
comment51.target=double\ tempo(double,\ double,\ double,\ double,\ double)
comment51.text=\n\ Metodo\ que\ devolve\ o\ tempo\ resultante\ do\ deslocamento\ entre\ dois\ pontos\n\ \n\ @param\ \ x\ a\ coordenada\ x\ atual\n\ @param\ \ y\ a\ coordenada\ x\ atual\n\ @param\ \ xDestino\ a\ coordenada\ x\ do\ destino\n\ @param\ \ yDestino\ a\ coordenada\ y\ do\ destino\n\ @param\ \ velocidade\ do\ veiculo\n\ \n\ @return\ tempo\ do\ deslocamento\ entre\ dois\ pontos\n
comment52.params=emailCli\ emailPro\ matricula\ a
comment52.target=void\ removeAluguer(java.lang.String,\ java.lang.String,\ java.lang.String,\ Aluguer)
comment53.params=emailCli\ emailPro\ matricula\ a
comment53.target=void\ alteraAntesViagem(java.lang.String,\ java.lang.String,\ java.lang.String,\ Aluguer)
comment54.params=emailCli\ emailPro\ matricula\ classificacao\ totalFaturado\ xDestino\ yDestino\ distanciaViagem\ a
comment54.target=void\ alteraAposViagem(java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double,\ double,\ double,\ double,\ Aluguer)
comment55.params=emailCli\ emailPro\ matricula\ totalFaturado\ xDestino\ yDestino\ distanciaViagem\ a
comment55.target=void\ alteraAposViagem2(java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double,\ double,\ double,\ Aluguer)
comment6.params=
comment6.target=java.util.Map\ getProprietarios()
comment6.text=\n\ Metodo\ que\ devolve\ os\ proprietarios\ de\ um\ conjunto\ de\ dados\n\ \n\ @return\ \ \ \ \ os\ proprietarios\ dos\ dados\n
comment7.params=pro
comment7.target=void\ setProprietarios(java.util.Map)
comment7.text=\n\ Metodo\ que\ altera\ os\ proprietarios\ de\ um\ conjunto\ de\ cados\n\ \n\ @param\ \ pro\ \ \ os\ novos\ proprietarios\n
comment8.params=
comment8.target=java.util.Map\ getVeiculosTodos()
comment8.text=\n\ Metodo\ que\ devolve\ os\ veiculos\ de\ um\ conjunto\ de\ dados\n\ \n\ @return\ \ \ \ \ os\ veiculos\ dos\ dados\n
comment9.params=vei
comment9.target=void\ setVeiculosTodos(java.util.Map)
comment9.text=\n\ Metodo\ que\ altera\ os\ veiculos\ de\ um\ conjunto\ de\ cados\n\ \n\ @param\ \ vei\ \ \ os\ novos\ veiculos\n
numComments=56
